(()=>{"use strict";var e={756:(e,n,t)=>{t.d(n,{Z:()=>s});var o=t(537),r=t.n(o),i=t(645),a=t.n(i)()(r());a.push([e.id,"@import url(https://fonts.googleapis.com/css2?family=Roboto&display=swap);"]),a.push([e.id,'*,\n*::before,\n*::after {\n    box-sizing: border-box;\n}\n\nbody {\n    margin: 0;\n    padding: 0;\n    font-family: Roboto, sans-serif;\n}\n\n.container {\n    display: grid;\n    grid-template-columns: 1fr 4fr 1.5fr;\n    min-height: 100vh;\n    background-color: #F0F4F8;\n    \n}\n\n.sidebar {\n    border: 1px solid #BCCCDC;\n    min-width: 220px;\n}\n\n.sidebar-projects {\n    display: flex;\n    justify-content: space-between;\n    padding: 10px 10px 10px 0;\n    margin: 15px 0;\n    border-radius: 4px;\n    cursor: pointer;\n}\n\n.sidebar-projects:hover {\n    background-color: #EAE2F8;\n}\n\nh3 {\n    padding-left: 40px;\n    margin: 0;\n}\n\nul li{\n    list-style: none;\n    cursor: pointer;\n}\n\n.project-icon {\n    display: flex;\n    align-items: baseline;\n    padding: 0 20px;\n}\n\nh2 {\n    padding-left: 10px;\n    font-size: 1.6rem;\n    font-weight: 400;\n}\n\n#new-task-form {\n    display: flex;\n}\n\n#new-task,\n#new-project,\n#priority {\n    width: 90%;\n    margin: 0 20px;\n    height: 20px;\n    padding: 20px;\n    border: none;\n    background-color: #D9E2EC;\n    border-radius: 6px;\n    border: 1px solid #D9E2EC;\n\n}\n\n#priority {\n    width: 10%;\n    padding: 0;\n}\n\n.date-priority-container {\n    display: flex;\n}\n\n#new-task:focus,\n#new-project:focus {\n    border: 1px solid #A081D9;\n    outline: none;\n    background-color: #ffffff;\n}\n\n#new-project {\n    margin: 0;\n    padding: 14px 20px;\n    border-radius: 0;\n}\n\n#new-project-form {\n    margin-left: 30px;\n    display: none;\n    border-radius: 6px;\n    align-items: center;\n\n}\n\n/* .btn-submit-project {\n} */\n\nform {\n    padding-bottom: 20px;\n}\n\n.task {\n    border-bottom: 1px solid #BCCCDC;\n    padding: 8px 20px;\n    margin: 10px 20px;\n    display: flex;\n    gap: 5px;\n    align-items: center;\n}\n\ninput[type="checkbox"] {\n    width: 14px;\n    height: 14px;\n}\n\ninput[type="checkbox"] + label {\n    cursor: pointer;\n}\n\ninput[type="checkbox"]:checked + label.task-checked {\n    text-decoration: line-through;\n}\n\n.current-task {\n    padding: 10px;\n    font-size: 1rem;\n    font-weight: bold;\n}\n\n.description-container {\n    border: 1px solid #BCCCDC;\n    padding: 5px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    min-width: 100%;\n}\n\n\n.current-task,\n.current-task-description {\n    resize: none;\n    background-color: #F0F4F8;\n    border: none;\n    outline: none;\n    padding: 10px;\n    font-family: Roboto, sans-serif;\n}',"",{version:3,sources:["webpack://./src/styles/main.css"],names:[],mappings:"AAEA;;;IAGI,sBAAsB;AAC1B;;AAEA;IACI,SAAS;IACT,UAAU;IACV,+BAA+B;AACnC;;AAEA;IACI,aAAa;IACb,oCAAoC;IACpC,iBAAiB;IACjB,yBAAyB;;AAE7B;;AAEA;IACI,yBAAyB;IACzB,gBAAgB;AACpB;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,yBAAyB;IACzB,cAAc;IACd,kBAAkB;IAClB,eAAe;AACnB;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,kBAAkB;IAClB,SAAS;AACb;;AAEA;IACI,gBAAgB;IAChB,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,qBAAqB;IACrB,eAAe;AACnB;;AAEA;IACI,kBAAkB;IAClB,iBAAiB;IACjB,gBAAgB;AACpB;;AAEA;IACI,aAAa;AACjB;;AAEA;;;IAGI,UAAU;IACV,cAAc;IACd,YAAY;IACZ,aAAa;IACb,YAAY;IACZ,yBAAyB;IACzB,kBAAkB;IAClB,yBAAyB;;AAE7B;;AAEA;IACI,UAAU;IACV,UAAU;AACd;;AAEA;IACI,aAAa;AACjB;;AAEA;;IAEI,yBAAyB;IACzB,aAAa;IACb,yBAAyB;AAC7B;;AAEA;IACI,SAAS;IACT,kBAAkB;IAClB,gBAAgB;AACpB;;AAEA;IACI,iBAAiB;IACjB,aAAa;IACb,kBAAkB;IAClB,mBAAmB;;AAEvB;;AAEA;GACG;;AAEH;IACI,oBAAoB;AACxB;;AAEA;IACI,gCAAgC;IAChC,iBAAiB;IACjB,iBAAiB;IACjB,aAAa;IACb,QAAQ;IACR,mBAAmB;AACvB;;AAEA;IACI,WAAW;IACX,YAAY;AAChB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,6BAA6B;AACjC;;AAEA;IACI,aAAa;IACb,eAAe;IACf,iBAAiB;AACrB;;AAEA;IACI,yBAAyB;IACzB,YAAY;IACZ,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,eAAe;AACnB;;;AAGA;;IAEI,YAAY;IACZ,yBAAyB;IACzB,YAAY;IACZ,aAAa;IACb,aAAa;IACb,+BAA+B;AACnC",sourcesContent:['@import url(\'https://fonts.googleapis.com/css2?family=Roboto&display=swap\');\n\n*,\n*::before,\n*::after {\n    box-sizing: border-box;\n}\n\nbody {\n    margin: 0;\n    padding: 0;\n    font-family: Roboto, sans-serif;\n}\n\n.container {\n    display: grid;\n    grid-template-columns: 1fr 4fr 1.5fr;\n    min-height: 100vh;\n    background-color: #F0F4F8;\n    \n}\n\n.sidebar {\n    border: 1px solid #BCCCDC;\n    min-width: 220px;\n}\n\n.sidebar-projects {\n    display: flex;\n    justify-content: space-between;\n    padding: 10px 10px 10px 0;\n    margin: 15px 0;\n    border-radius: 4px;\n    cursor: pointer;\n}\n\n.sidebar-projects:hover {\n    background-color: #EAE2F8;\n}\n\nh3 {\n    padding-left: 40px;\n    margin: 0;\n}\n\nul li{\n    list-style: none;\n    cursor: pointer;\n}\n\n.project-icon {\n    display: flex;\n    align-items: baseline;\n    padding: 0 20px;\n}\n\nh2 {\n    padding-left: 10px;\n    font-size: 1.6rem;\n    font-weight: 400;\n}\n\n#new-task-form {\n    display: flex;\n}\n\n#new-task,\n#new-project,\n#priority {\n    width: 90%;\n    margin: 0 20px;\n    height: 20px;\n    padding: 20px;\n    border: none;\n    background-color: #D9E2EC;\n    border-radius: 6px;\n    border: 1px solid #D9E2EC;\n\n}\n\n#priority {\n    width: 10%;\n    padding: 0;\n}\n\n.date-priority-container {\n    display: flex;\n}\n\n#new-task:focus,\n#new-project:focus {\n    border: 1px solid #A081D9;\n    outline: none;\n    background-color: #ffffff;\n}\n\n#new-project {\n    margin: 0;\n    padding: 14px 20px;\n    border-radius: 0;\n}\n\n#new-project-form {\n    margin-left: 30px;\n    display: none;\n    border-radius: 6px;\n    align-items: center;\n\n}\n\n/* .btn-submit-project {\n} */\n\nform {\n    padding-bottom: 20px;\n}\n\n.task {\n    border-bottom: 1px solid #BCCCDC;\n    padding: 8px 20px;\n    margin: 10px 20px;\n    display: flex;\n    gap: 5px;\n    align-items: center;\n}\n\ninput[type="checkbox"] {\n    width: 14px;\n    height: 14px;\n}\n\ninput[type="checkbox"] + label {\n    cursor: pointer;\n}\n\ninput[type="checkbox"]:checked + label.task-checked {\n    text-decoration: line-through;\n}\n\n.current-task {\n    padding: 10px;\n    font-size: 1rem;\n    font-weight: bold;\n}\n\n.description-container {\n    border: 1px solid #BCCCDC;\n    padding: 5px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    min-width: 100%;\n}\n\n\n.current-task,\n.current-task-description {\n    resize: none;\n    background-color: #F0F4F8;\n    border: none;\n    outline: none;\n    padding: 10px;\n    font-family: Roboto, sans-serif;\n}'],sourceRoot:""}]);const s=a},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",o=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),o&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),o&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,o,r,i){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(o)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(a[c]=!0)}for(var d=0;d<e.length;d++){var A=[].concat(e[d]);o&&a[A[0]]||(void 0!==i&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=i),t&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=t):A[2]=t),r&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=r):A[4]="".concat(r)),n.push(A))}},n}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */"),a=t.sources.map((function(e){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(e," */")}));return[n].concat(a).concat([i]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,o=0;o<n.length;o++)if(n[o].identifier===e){t=o;break}return t}function o(e,o){for(var i={},a=[],s=0;s<e.length;s++){var c=e[s],d=o.base?c[0]+o.base:c[0],A=i[d]||0,p="".concat(d," ").concat(A);i[d]=A+1;var l=t(p),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==l)n[l].references++,n[l].updater(u);else{var m=r(u,o);o.byIndex=s,n.splice(s,0,{identifier:p,updater:m,references:1})}a.push(p)}return a}function r(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,r){var i=o(e=e||[],r=r||{});return function(e){e=e||[];for(var a=0;a<i.length;a++){var s=t(i[a]);n[s].references--}for(var c=o(e,r),d=0;d<i.length;d++){var A=t(i[d]);0===n[A].references&&(n[A].updater(),n.splice(A,1))}i=c}}},569:e=>{var n={};e.exports=function(e,t){var o=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),n.styleTagTransform(o,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(o){var r=n[o];if(void 0!==r)return r.exports;var i=n[o]={id:o,exports:{}};return e[o](i,i.exports,t),i.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var o in n)t.o(n,o)&&!t.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:n[o]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var o=n.getElementsByTagName("script");o.length&&(e=o[o.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),t.nc=void 0,(()=>{var e=t(379),n=t.n(e),o=t(795),r=t.n(o),i=t(569),a=t.n(i),s=t(565),c=t.n(s),d=t(216),A=t.n(d),p=t(589),l=t.n(p),u=t(756),m={};m.styleTagTransform=l(),m.setAttributes=c(),m.insert=a().bind(null,"head"),m.domAPI=r(),m.insertStyleElement=A(),n()(u.Z,m),u.Z&&u.Z.locals&&u.Z.locals;const f=t.p+"file-tree.svg",C=(t.p,t.p,t.p+"plus.svg"),g=t.p+"submit.svg",b={currentProject:document.querySelector(".current-project")},y={Inbox:[{title:"Task Title",description:"Task description",dueDate:"Task date",priority:"High"},{title:"Task Title2",description:"Task description2",dueDate:"Task date2",priority:"High"}],website:[{title:"Web task Title2",description:"Web Task description2",dueDate:"Web Task date2",priority:"Web High2"}]},x=[],B=e=>{y[e]=[]},h=(e,n,t="None",o="Today",r="Low")=>{const i={};i.title=n,i.description=t,i.dueDate=o,i.priority=r,console.log(i,"from createTask"),console.log(e),y[e].push(i)},I=e=>y[e],v=(e="Inbox")=>{const n=document.querySelector("#new-task-form"),t=b.currentProject,o=document.createElement("input"),r=document.createElement("label");F(n),o.setAttribute("type","text"),o.setAttribute("name","new-task"),o.setAttribute("id","new-task"),r.setAttribute("for","new-task"),n.append(o,r),T(n),D(n),L(),document.querySelector(".project-icon > img").src=f,t.textContent=e,console.log("from displayMainHeader",e),o.placeholder=`+ Add task to "${t.textContent}", press Enter to save`,k(e)},k=e=>{const n=document.getElementById("task-list-form");let t=e===x?x:y[e],o=0;F(n),t.forEach((e=>{const r=document.createElement("div");r.classList.add("task"),n.prepend(r);const i=document.createElement("input");i.setAttribute("type","checkbox"),i.setAttribute("id",`id${o}`);const a=i.id.substring(2);t===x&&(i.checked=!0,i.disabled=!0),"High"===t[a].priority?r.style.borderLeft="2px solid #CF1124":"Normal"===t[a].priority?r.style.borderLeft="2px solid #F0B429":"Low"===t[a].priority&&(r.style.borderLeft="2px solid #724BB7");const s=document.createElement("label");s.textContent=e.title,s.classList.add("task-checked"),o++,r.append(i,s),i.addEventListener("click",(()=>{const e=b.currentProject.textContent;((e,n)=>{console.log("tasks:",e),x.push(e[n]),e.splice(n,1),console.log("completed tasks:",x)})(t,a),k(e)}),{once:!0}),s.addEventListener("click",(()=>E(t[a]))),console.log(t)}))},E=e=>{const n=document.querySelector(".description-container");F(n),n.style.display="block";const t=document.createElement("h2");t.textContent="Description",n.appendChild(t),w("current-task",1,33),w("current-task-description",40,40);const o=document.querySelector(".current-task"),r=document.querySelector(".current-task-description");o.value=e.title,r.value=e.description,o.addEventListener("input",(()=>{j(e,o.value)})),r.addEventListener("input",(()=>{S(e,r.value)}))},w=(e,n,t)=>{const o=document.querySelector(".description-container"),r=document.createElement("textarea");r.classList.add(e),r.setAttribute("rows",n),r.setAttribute("cols",t),r.setAttribute("spellcheck",!1),"current-task-description"===e&&r.setAttribute("placeholder","Description"),o.appendChild(r)},j=(e,n)=>{e.title=n,console.log(y)},S=(e,n)=>{e.description=n},L=()=>{const e=document.getElementById("new-task"),n=document.getElementById("new-task-form");e.addEventListener("keypress",(e=>{if("Enter"===e.key&&e.target.value){const t=b.currentProject.textContent;e.preventDefault(),h(t,e.target.value,"","",n.elements.priority.value),e.target.value="",k(t)}}))},T=e=>{const n=document.querySelector(".date-priority-container"),t=document.createElement("select"),o=document.createElement("option"),r=document.createElement("option"),i=document.createElement("option");t.setAttribute("name","priority"),t.setAttribute("id","priority"),o.textContent="High",o.setAttribute("value","High"),o.style.color="#CF1124",r.textContent="Normal",r.setAttribute("value","Normal"),r.style.color="#CB6E17",i.textContent="Low",i.setAttribute("value","Low"),i.setAttribute("selected",""),i.style.color="#724BB7",console.log(n),n.append(t),e.append(n),t.append(o,r,i)},D=e=>{const n=document.querySelector(".date-priority-container"),t=document.createElement("input");t.setAttribute("type","date"),n.append(t),e.append(n)},F=e=>{for(;e.hasChildNodes();)e.removeChild(e.firstChild)};(()=>{const e=document.querySelector(".sidebar"),n=document.querySelector("ul"),t=document.createElement("div");t.classList.add("sidebar-projects");const o=document.createElement("h3");o.textContent="Projects";const r=document.querySelector("#new-project-form"),i=document.createElement("input");i.setAttribute("type","image"),i.src=g,r.appendChild(i),e.prepend(t),t.appendChild(o);const a=new Image;a.src=C,t.appendChild(a),t.addEventListener("click",(()=>{r.style.display="flex"===r.style.display?"none":"flex"})),r.addEventListener("keypress",(e=>{if("Enter"===e.key&&e.target.value){e.preventDefault(),B(e.target.value);const t=document.createElement("li");t.textContent=e.target.value,t.classList.add("sidebar-projects"),n.appendChild(t),t.addEventListener("click",(()=>{v(t.textContent),console.log(t.textContent)})),console.log("projects",y),e.target.value=""}})),Object.keys(y).forEach((e=>{const t=document.createElement("li");t.textContent=e,t.classList.add("sidebar-projects"),n.appendChild(t),t.addEventListener("click",(()=>{v(t.textContent),console.log(t.textContent)}))})),(()=>{const e=document.querySelector(".sidebar"),n=document.getElementById("new-task-form"),t=document.createElement("ul");e.appendChild(t);const o=document.createElement("li");o.textContent="Completed Tasks",t.appendChild(o),o.addEventListener("click",(()=>{F(n),b.currentProject.textContent=o.textContent,k(x)}))})()})(),v(),L(),console.log("Hello 123"),console.log(I()),B("test"),h("test","t3","d3","dd3","l"),console.log("after: ",I(["inbox"])),console.log("Teset",I("test")),y.test[0].priority="Low",B("website blog")})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,